# Generated by Django 5.0 on 2025-08-30 08:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FarmType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='farm type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Farm Type',
                'verbose_name_plural': 'Farm Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='is deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='farmer_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1, null=True, verbose_name='gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('id_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ID/Passport Number')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')], verbose_name='alternate phone number')),
                ('country', models.CharField(default='Tanzania', max_length=100, verbose_name='country')),
                ('region', models.CharField(max_length=100, verbose_name='region')),
                ('district', models.CharField(max_length=100, verbose_name='district')),
                ('ward', models.CharField(blank=True, max_length=100, null=True, verbose_name='ward')),
                ('village', models.CharField(blank=True, max_length=100, null=True, verbose_name='village')),
                ('address', models.TextField(blank=True, null=True, verbose_name='physical address')),
                ('gps_coordinates', models.CharField(blank=True, help_text='Latitude and Longitude (e.g., -6.3690, 34.8888)', max_length=100, null=True, verbose_name='GPS coordinates')),
                ('farm_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='farm name')),
                ('farm_size_ha', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='farm size (hectares)')),
                ('crops_grown', models.JSONField(default=list, help_text='List of crops grown by the farmer (stored as JSON)', verbose_name='crops grown')),
                ('years_farming', models.PositiveIntegerField(blank=True, null=True, verbose_name='years of farming experience')),
                ('is_lead_farmer', models.BooleanField(default=False, verbose_name='is lead farmer')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='verified at')),
                ('verification_notes', models.TextField(blank=True, null=True, verbose_name='verification notes')),
                ('has_bank_account', models.BooleanField(default=False, verbose_name='has bank account')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='bank name')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='account number')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_farmers', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('lead_farmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_farmers', to='farmers.farmerprofile', verbose_name='lead farmer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_farmers', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('farm_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='farmers', to='farmers.farmtype', verbose_name='farm type')),
            ],
            options={
                'verbose_name': 'Farmer Profile',
                'verbose_name_plural': 'Farmer Profiles',
                'ordering': ['-created_at'],
                'permissions': [('can_verify_farmer', 'Can verify farmer profiles'), ('export_farmer', 'Can export farmer data'), ('import_farmer', 'Can import farmer data')],
                'indexes': [models.Index(fields=['region', 'district'], name='farmers_far_region_c390cc_idx'), models.Index(fields=['is_verified'], name='farmers_far_is_veri_f51665_idx'), models.Index(fields=['is_lead_farmer'], name='farmers_far_is_lead_f47891_idx'), models.Index(fields=['created_at'], name='farmers_far_created_e48df9_idx')],
            },
        ),
    ]
